openapi: 3.0.1
info:
  title: Authentication API
  description: API for user authentication
  version: 1.0.0
tags:
  - name: auth
    description: API to handle user authentication
paths:
  /auth/signin:
    post:
      summary: Authenticate a user
      operationId: signInUser
      tags:
        - auth
      requestBody:
        description: User login credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: User authenticated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Unauthorized, invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
  /auth/refresh-token:
    post:
      summary: Refresh JWT token
      operationId: refreshToken
      tags:
        - auth
      requestBody:
        description: Request to refresh JWT token
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
      responses:
        '200':
          description: New JWT token generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '403':
          description: Forbidden, invalid or expired refresh token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
  /auth/logout:
    post:
      summary: Logout user
      operationId: logoutUser
      tags:
        - auth
      requestBody:
        description: Request to logout user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutRequest'
      responses:
        '204':
          description: User logged out successfully, token invalidated
        '400':
          description: Bad request, invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
  /auth/resetPassword:
    post:
      summary: Reset password
      operationId: resetPassword
      tags:
        - auth
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
        - name: newPassword
          in: query
          required: true
          schema:
            type: string
            format: password
      responses:
        '200':
          description: Password reset successfully
        '400':
          description: Invalid token or password
  /auth/sendResetPasswordMail:
    get:
      summary: Send a reset password email
      operationId: sendResetPasswordMail
      tags:
        - auth
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: email
      responses:
        '200':
          description: Reset password email sent successfully
        '400':
          description: Bad request, invalid email
  /auth/validateResetPasswordCode:
    get:
      summary: Validate reset password code
      operationId: validateResetPasswordCode
      tags:
        - auth
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: email
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Reset password token generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordTokenResponse'
        '400':
          description: Invalid code or email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
components:
  schemas:
    RegisterUserRequest:
      type: object
      properties:
        phoneNumber:
          type: string
        password:
          type: string
          format: password
        email:
          type: string
          format: email
        name:
          type: string
        familyName:
          type: string
      required:
        - phoneNumber
        - password
        - email
    LoginRequest:
      type: object
      properties:
        username:
          type: string
          example: "1234567890 or john.doe@example.com"
        password:
          type: string
          format: password
      required:
        - username
        - password
    AuthResponse:
      type: object
      properties:
        token:
          type: string
        refreshToken:
          type: string
        userId:
          type: integer
        role:
          type: string
      required:
        - token
        - refreshToken
        - userId
        - role
    TokenRefreshRequest:
      type: object
      properties:
        refreshToken:
          type: string
      required:
        - refreshToken
    LogoutRequest:
      type: object
      properties:
        token:
          type: string
        refreshToken:
          type: string
      required:
        - token
        - refreshToken
    ResetPasswordTokenResponse:
      type: object
      properties:
        resetToken:
          type: string
      required:
        - resetToken
    AuthError:
      type: object
      properties:
        error:
          type: string
